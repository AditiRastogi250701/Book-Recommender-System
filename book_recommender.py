# -*- coding: utf-8 -*-
"""Book Recommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qCGK4F8bEMcHC91cbeAPi0YmZBL7OMzZ
"""

# Commented out IPython magic to ensure Python compatibility.
#importing

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# %matplotlib inline

"""# Dataset"""

#loading dataset

books=pd.read_csv(r'/content/Books.csv')
ratings=pd.read_csv(r'/content/Ratings.csv')
users=pd.read_csv(r'/content/Users.csv')

"""# Data Pre-Processing"""

books.shape

books.head()

books.dropna()

books.shape

books.info()

books=books.drop(['Image-URL-S','Image-URL-M','Image-URL-L'], axis=1)

books.shape

books.isnull().sum()

books['Year-Of-Publication'].fillna(books['Year-Of-Publication'].mean(), inplace = True)
books['Publisher'].fillna(books['Publisher'].mode()[0], inplace=True)

books.isnull().sum()

books

ratings.shape

ratings.describe()

ratings.dropna()

ratings.info()

ratings.isnull().sum()

ratings['Book-Rating'].fillna(ratings['Book-Rating'].mean(), inplace=True)

ratings.isnull().sum()

ratings

users

users.describe()

users.head()

users.isnull().sum()

#many null values in Age column
users=users.drop(['Age'],axis=1)

users.shape

users.isnull().sum()

users.info()

users['Location'].fillna(users['Location'].mode(), inplace=True)

dataset=pd.merge(books,ratings,on='ISBN')

dataset=pd.merge(dataset,users,on='User-ID')

dataset.shape

dataset.head()

dataset.isnull().sum()

print("Unique values in 'ISBN' : ",len(pd.unique(dataset['ISBN'])))
print("Unique values in 'Book-Title' : ",len(pd.unique(dataset['Book-Title'])))
print("Unique values in 'Book-Author' : ",len(pd.unique(dataset['Book-Author'])))
print("Unique values in 'Year-Of-Publication' : ",len(pd.unique(dataset['Year-Of-Publication'])))
print("Unique values in 'Publisher' : ",len(pd.unique(dataset['Publisher'])))
print("Unique values in 'User-ID' : ",len(pd.unique(dataset['User-ID'])))
print("Unique values in 'Location' : ",len(pd.unique(dataset['Location'])))

dataset.dropna()

book_matrix=dataset.pivot_table(index='User-ID',columns=['Book-Title'],values='Book-Rating')

book_matrix

name=input()

book_matrix[name]

similarity=book_matrix.corrwith(book_matrix[name])

recommendation_matrix=pd.DataFrame(similarity, columns=['Correlation_Score'])

recommendation_matrix

recommendation_matrix=recommendation_matrix.sort_values('Correlation_Score',ascending=False)

recommendation_matrix

recommendation_matrix['Count']=dataset.groupby('Book-Title')['Book-Rating'].count()

recommendation_matrix

recommendation_matrix['Count'].describe()

recommendation_matrix=recommendation_matrix[recommendation_matrix['Count']>5]

recommendation_matrix

recommendation_matrix.dropna()

recommendation_matrix

recommendation_matrix.head()

recommendation_matrix.isnull().sum()

recommendation_matrix=recommendation_matrix.dropna()

recommendation_matrix

recommendation_matrix=recommendation_matrix[recommendation_matrix['Correlation_Score']>0]

recommendation_matrix

num=int(input())

recommendation_matrix.isnull().sum()

print(recommendation_matrix.head(num))

recommendation_matrix=recommendation_matrix.drop(['Count'],axis=1)

print("Recommendations are : ")
book_names=recommendation_matrix.index
for i in range(num):
  print((i+1),".  ",book_names[i])